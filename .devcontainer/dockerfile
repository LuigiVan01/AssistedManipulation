FROM ros:iron

ARG USERNAME=USERNAME
ARG USER_UID=1000
ARG USER_GID=$USER_UID

# Delete user if it exists in container (e.g Ubuntu Noble: ubuntu)
RUN if id -u $USER_UID ; then userdel `id -un $USER_UID` ; fi

# Create the user
RUN groupadd --gid $USER_GID $USERNAME \
    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME \
    && apt-get update \
    && apt-get install -y sudo \
    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME
RUN apt-get update && apt-get upgrade -y
RUN apt-get install -y python3-pip
ENV SHELL /bin/bash

# Install packages
RUN apt install -qqy \
    curl \
    iputils-ping \
    git \
    x11-apps \
    libeigen3-dev \
    nlohmann-json3-dev 
    #ros-iron-pinocchio

RUN echo 'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/root/assistedmanipulation/lib/raisim/linux/lib' >> ~/.bashrc && \
    echo 'PYTHONPATH=$PYTHONPATH:/root/assistedmanipulation/lib/raisim/linux/lib' >> ~/.bashrc && \
    echo 'source "/opt/ros/$ROS_DISTRO/setup.bash" --' >> ~/.bashrc

CMD ["/bin/bash"]

# Instal GDB compiler
RUN apt-get update && apt-get install -y gdb

# Install pinnochio.
RUN mkdir -p /etc/apt/keyrings && \
    curl http://robotpkg.openrobots.org/packages/debian/robotpkg.asc | tee /etc/apt/keyrings/robotpkg.asc && \
    echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/robotpkg.asc] http://robotpkg.openrobots.org/packages/debian/pub jammy robotpkg" | tee /etc/apt/sources.list.d/robotpkg.list && \
    apt update && \
    apt install -qqy robotpkg-py3*-pinocchio && \
    echo 'export PATH=/opt/openrobots/bin:$PATH' >> ~/.bashrc && \
    echo 'export PKG_CONFIG_PATH=/opt/openrobots/lib/pkgconfig:$PKG_CONFIG_PATH' >> ~/.bashrc && \
    echo 'export LD_LIBRARY_PATH=/opt/openrobots/lib:$LD_LIBRARY_PATH' >> ~/.bashrc && \
    echo 'export PYTHONPATH=/opt/openrobots/lib/python3.10/site-packages:$PYTHONPATH # Adapt your desired python version here' >> ~/.bashrc && \
    echo 'export CMAKE_PREFIX_PATH=/opt/openrobots:$CMAKE_PREFIX_PATH' >> ~/.bashrc

# Build osqp from source.
# RUN git clone -b v1.0.0.beta1 --recursive https://github.com/osqp/osqp.git osqp && \
#     cd osqp && \
#     git config --global --add safe.directory $(pwd) && \
#     git submodule foreach --recursive 'git config --global --add safe.directory . && git reset --hard' && \
#     git clone https://github.com/osqp/qdldl.git src/osqp/algebra/_common/lin_sys/qdldl/qdldl_sources && \
#     git config --global --add safe.directory $(pwd)/algebra/_common/lin_sys/qdldl/qdldl_sources && \
#     mkdir build && cd build && \
#     cmake -G "Unix Makefiles" .. && \
#     cmake --build . --target install && \
#     cd ../.. && rm -rf osqp
